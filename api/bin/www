#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('rest-api-nodejs-mongodb:server');
const http = require('http');
let port = normalizePort('1337');
app.set('port', port);
const server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  let port = parseInt(val, 10);
  if (isNaN(port)) return val; // named pipe
  if (port >= 0) return port; // port number
  return false;
}
function onError(error) {//Event listener for HTTP server "error" event.
  if (error.syscall !== 'listen') throw error;
  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {// handle specific listen errors with friendly messages
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1); break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1); break;
    default: throw error;
  }
}
function onListening() { //Event listener for HTTP server "listening" event.
  var addr = server.address(),
      bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}